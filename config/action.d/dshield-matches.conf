# Fail2Ban configuration file
#
# Author: Russell Odom <russ@gloomytrousers.co.uk>
#         Stef Simoens <stef@bgs.org>
# Submits attack reports to DShield (http://www.dshield.org/)
#
# This action should only be used in conjuntion with a (custom) filter that
# matches the netfilter/iptables log format. It uses <matches> to report
# full details (source port, destination port, TCP flags) but also your
# non-obfuscated IP.
#
# You SHOULD provide:
# <userid> (your DShield userID, if you have one - recommended, but reports will
# be used anonymously if not)
# <sender> (e-mail address to use when sending reports - should match userID)
#
# Best practice is to create "dshield.local" with contents something like this:
# [Init]
# userid = 12345
# sender = your_email@example.org
#
# Other useful configuration values are 
# <lines>/<minreportinterval>/<maxbufferage> (to configure how often the buffer
# is flushed).
#
# $Revision$

[Definition]

# Option:  actionstart
# Notes.:  command executed once at the start of Fail2Ban.
# Values:  CMD
#
actionstart =

# Option:  actionstop
# Notes.:  command executed once at the end of Fail2Ban
# Values:  CMD
#
actionstop = TZONE=`date +%%z | sed 's/\([+-]..\)\(..\)/\1:\2/'`
             if [ -f <tmpfile>.buffer ]; then
                 printf %%b "Subject: FORMAT IPTABLES USERID <userid> TZ $TZONE Fail2Ban
                 Date: `date -u +"%%a, %%d %%h %%Y %%T +0000"`
                 From: Fail2Ban <<sender>>
                 To: <dest>\n
                 `cat <tmpfile>.buffer`" | /usr/sbin/sendmail -f <sender> <dest>
                 date +%%s > <tmpfile>.lastsent
             fi
             rm -f <tmpfile>.buffer <tmpfile>.first

# Option:  actioncheck
# Notes.:  command executed once before each actionban command
# Values:  CMD
#
actioncheck =

# Option:  actionban
# Notes.:  command executed when banning an IP. Take care that the
#          command is executed with Fail2Ban user rights.
# Tags:    <ip>  IP address
#          <failures>  number of failures
#          <time>  unix timestamp of the ban time
# Values:  CMD
#
# See http://www.dshield.org/specs.html for more on report format/notes
#
# Note: We are currently using <time> for the timestamp because no tag is
# available to indicate the timestamp of the log message(s) which triggered the
# ban. Therefore the timestamps we are using in the report, whilst often only a
# few seconds out, are incorrect. See
# http://sourceforge.net/tracker/index.php?func=detail&aid=2017795&group_id=121032&atid=689047
#
actionban = TZONE=`date +%%z | sed 's/\([+-]..\)\(..\)/\1:\2/'`
            printf %%b "<matches>" >> <tmpfile>.buffer
            NOW=`date +%%s`
            if [ ! -f <tmpfile>.first ]; then
                echo <time> | cut -d. -f1 > <tmpfile>.first
            fi
            if [ ! -f <tmpfile>.lastsent ]; then
                echo 0 > <tmpfile>.lastsent
            fi
            LOGAGE=$(($NOW - `cat <tmpfile>.first`))
            LASTREPORT=$(($NOW - `cat <tmpfile>.lastsent`))
            LINES=$( wc -l <tmpfile>.buffer | awk '{ print $1 }' )
            if [ $LINES -ge <lines> && $LASTREPORT -gt <minreportinterval> ] || [ $LOGAGE -gt <maxbufferage> ]; then
                printf %%b "Subject: FORMAT IPTABLES USERID <userid> TZ $TZONE Fail2Ban
                Date: `date -u +"%%a, %%d %%h %%Y %%T +0000"`
                From: Fail2Ban <<sender>>
                To: <dest>\n
                `cat <tmpfile>.buffer`" | /usr/sbin/sendmail -f <sender> <dest>
                rm -f <tmpfile>.buffer <tmpfile>.first
                echo $NOW > <tmpfile>.lastsent
            fi

actionreban = TZONE=`date +%%z | sed 's/\([+-]..\)\(..\)/\1:\2/'`
            printf %%b "<matches>" >> <tmpfile>.buffer
            NOW=`date +%%s`
            if [ ! -f <tmpfile>.first ]; then
                echo <time> | cut -d. -f1 > <tmpfile>.first
            fi
            if [ ! -f <tmpfile>.lastsent ]; then
                echo 0 > <tmpfile>.lastsent
            fi
            LOGAGE=$(($NOW - `cat <tmpfile>.first`))
            LASTREPORT=$(($NOW - `cat <tmpfile>.lastsent`))
            LINES=$( wc -l <tmpfile>.buffer | awk '{ print $1 }' )
            if [ $LINES -ge <lines> && $LASTREPORT -gt <minreportinterval> ] || [ $LOGAGE -gt <maxbufferage> ]; then
                printf %%b "Subject: FORMAT IPTABLES USERID <userid> TZ $TZONE Fail2Ban
                Date: `date -u +"%%a, %%d %%h %%Y %%T +0000"`
                From: Fail2Ban <<sender>>
                To: <dest>\n
                `cat <tmpfile>.buffer`" | /usr/sbin/sendmail -f <sender> <dest>
                rm -f <tmpfile>.buffer <tmpfile>.first
                echo $NOW > <tmpfile>.lastsent
            fi

# Option:  actionunban
# Notes.:  command executed when unbanning an IP. Take care that the
#          command is executed with Fail2Ban user rights.
# Tags:    <ip>  IP address
#          <failures>  number of failures
#          <time>  unix timestamp of the ban time
# Values:  CMD
#
actionunban = TZONE=`date +%%z | sed 's/\([+-]..\)\(..\)/\1:\2/'`
              if [ -f <tmpfile>.first ]; then
                  NOW=`date +%%s`
                  LOGAGE=$(($NOW - `cat <tmpfile>.first`))
                  if [ $LOGAGE -gt <maxbufferage> ]; then
                      printf %%b "Subject: FORMAT IPTABLES USERID <userid> TZ $TZONE Fail2Ban
                      Date: `date -u +"%%a, %%d %%h %%Y %%T +0000"`
                      From: Fail2Ban <<sender>>
                      To: <dest>\n
                      `cat <tmpfile>.buffer`" | /usr/sbin/sendmail -f <sender> <dest>
                      rm -f <tmpfile>.buffer <tmpfile>.first
                      echo $NOW > <tmpfile>.lastsent
                  fi
              fi


[Init]
# Option:  userid
# Notes.:  Your DSheild user ID. Should be provided either in the jail config or
#          in a .local file.
#          Register at https://secure.dshield.org/register.html
# Values:  [ NUM ]  Default: 0
#
userid = 0

# Option:  lines
# Notes.:  How many lines to buffer before making a report. Regardless of this,
#          reports are sent a minimum of <minreportinterval> apart, or if the
#          buffer contains an event over <maxbufferage> old, or on shutdown
# Values:  [ NUM ]  Default: 50
#
lines = 50

# Option:  minreportinterval
# Notes.:  Minimum period (in seconds) that must elapse before we submit another
#          batch of reports. DShield request a minimum of 1 hour (3600 secs)
#          between reports.
# Values:  [ NUM ]  Default: 3600
#
minreportinterval = 3600

# Option:  maxbufferage
# Notes.:  Maximum age (in seconds) of the oldest report in the buffer before we
#          submit the batch, even if we haven't reached <lines> yet. Note that
#          this is only checked on each ban/unban, and that we always send
#          anything in the buffer on shutdown. Must be greater than
#          <minreportinterval>.
# Values:  [ NUM ]  Default: 21600 (6 hours)
#
maxbufferage = 21600

# Option:  sender
# Notes.:  Sender e-mail address for reports
# Values:  [ STRING ]  Default: root
sender = root

# Option:  dest
# Notes.:  Destination e-mail address for reports
# Values:  [ STRING ]  Default: reports@dshield.org
#
dest = reports@dshield.org

# Option:  tmpfile
# Notes.:  Base name of temporary files used for buffering
# Values:  [ STRING ]  Default: /tmp/fail2ban-dshield
#
tmpfile = /var/run/fail2ban/tmp-dshield-matches
