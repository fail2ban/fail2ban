
# failJSON: { "time": "2012-04-09T11:53:29", "match": true , "host": "192.0.43.10" }
2012/04/09 11:53:29 [error] 2865#0: *66647 user "xyz" was not found in "/var/www/.htpasswd", client: 192.0.43.10, server: www.myhost.com, request: "GET / HTTP/1.1", host: "www.myhost.com"
# failJSON: { "time": "2012-04-09T11:53:36", "match": true , "host": "192.0.43.10" }
2012/04/09 11:53:36 [error] 2865#0: *66647 user "xyz": password mismatch, client: 192.0.43.10, server: www.myhost.com, request: "GET / HTTP/1.1", host: "www.myhost.com"
# failJSON: { "time": "2014-04-01T22:20:38", "match": true, "host": "10.0.2.2" }
2014/04/01 22:20:38 [error] 30708#0: *3 user "scribendio": password mismatch, client: 10.0.2.2, server: , request: "GET / HTTP/1.1", host: "localhost:8443"
# failJSON: { "time": "2014-04-02T12:37:58", "match": true, "host": "10.0.2.2" }
2014/04/02 12:37:58 [error] 6563#0: *1861 user "scribendio": password mismatch, client: 10.0.2.2, server: scribend.io, request: "GET /admin HTTP/1.1", host: "scribend.io", referrer: "https://scribend.io/admin"
# failJSON: { "time": "2014-04-03T22:20:38", "match": true, "host": "192.0.2.1", "desc": "user name with space" }
2014/04/03 22:20:38 [error] 30708#0: *3 user "scriben dio": password mismatch, client: 192.0.2.1, server: , request: "GET / HTTP/1.1", host: "localhost:8443"
# failJSON: { "time": "2014-04-03T22:20:40", "match": true, "host": "192.0.2.2", "desc": "trying injection on user name"}
2014/04/03 22:20:40 [error] 30708#0: *3 user "test": password mismatch, client: 127.0.0.1, server: test, request: "GET / HTTP/1.1", host: "localhost:8443"": was not found in "/etc/nginx/.htpasswd", client: 192.0.2.2, server: , request: "GET / HTTP/1.1", host: "localhost:8443"

# filterOptions: {"extension": "protect-web-apps"}

# Default message patterns to protect web apps (see gh-1676)
#
# failJSON: { "time": "2016-06-01T01:17:42", "match": true , "host": "192.168.0.2" }
2016/06/01 01:17:42 [error] 6563#0: *1861 user  not found: My Protected Web Application, client: 192.168.0.2, ...
# failJSON: { "time": "2016-06-01T02:17:42", "match": true , "host": "192.168.0.2" }
2016/06/01 02:17:42 [error] 6563#0: *1861 user bob not authorized: My Protected Web Application, client: 192.168.0.2, ...
# failJSON: { "time": "2016-06-01T03:17:42", "match": true , "host": "192.168.0.2" }
2016/06/01 03:17:42 [error] 6563#0: *1861 user "bob" password mismatch: My Protected Web Application, client: 192.168.0.2, ...
# failJSON: { "time": "2016-06-01T04:17:42", "match": true , "host": "192.168.0.2" }
2016/06/01 04:17:42 [error] 6563#0: *1861 user sent invalid token: My Protected Web Application, client: 192.168.0.2, ...
# failJSON: { "time": "2016-06-01T05:17:42", "match": true , "host": "192.168.0.2" }
2016/06/01 05:17:42 [error] 6563#0: *1861 user misbehaved: My Protected Web Application, client: 192.168.0.2, ...
