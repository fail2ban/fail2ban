.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.49.3.
.TH FAIL2BAN-PYTHON "1" "April 2024" "fail2ban-python 1.1.1.1" "User Commands"
.SH NAME
fail2ban-python \- a helper for Fail2Ban to assure that the same Python is used
.SH DESCRIPTION
usage: fail2ban\-python [option] ... [\-c cmd | \fB\-m\fR mod | file | \fB\-]\fR [arg] ...
Options (and corresponding environment variables):
\fB\-b\fR     : issue warnings about str(bytes_instance), str(bytearray_instance)
.IP
and comparing bytes/bytearray with str. (\fB\-bb\fR: issue errors)
.PP
\fB\-B\fR     : don't write .pyc files on import; also PYTHONDONTWRITEBYTECODE=x
\fB\-c\fR cmd : program passed in as string (terminates option list)
\fB\-d\fR     : turn on parser debugging output (for experts only, only works on
.IP
debug builds); also PYTHONDEBUG=x
.PP
\fB\-E\fR     : ignore PYTHON* environment variables (such as PYTHONPATH)
\fB\-h\fR     : print this help message and exit (also \-? or \fB\-\-help\fR)
\fB\-i\fR     : inspect interactively after running script; forces a prompt even
.IP
if stdin does not appear to be a terminal; also PYTHONINSPECT=x
.PP
\fB\-I\fR     : isolate Python from the user's environment (implies \fB\-E\fR and \fB\-s\fR)
\fB\-m\fR mod : run library module as a script (terminates option list)
\fB\-O\fR     : remove assert and __debug__\-dependent statements; add .opt\-1 before
.IP
\&.pyc extension; also PYTHONOPTIMIZE=x
.PP
\fB\-OO\fR    : do \fB\-O\fR changes and also discard docstrings; add .opt\-2 before
.IP
\&.pyc extension
.PP
\fB\-P\fR     : don't prepend a potentially unsafe path to sys.path
\fB\-q\fR     : don't print version and copyright messages on interactive startup
\fB\-s\fR     : don't add user site directory to sys.path; also PYTHONNOUSERSITE
\fB\-S\fR     : don't imply 'import site' on initialization
\fB\-u\fR     : force the stdout and stderr streams to be unbuffered;
.IP
this option has no effect on stdin; also PYTHONUNBUFFERED=x
.PP
\fB\-v\fR     : verbose (trace import statements); also PYTHONVERBOSE=x
.IP
can be supplied multiple times to increase verbosity
.PP
\fB\-V\fR     : print the Python version number and exit (also \fB\-\-version\fR)
.IP
when given twice, print more information about the build
.PP
\fB\-W\fR arg : warning control; arg is action:message:category:module:lineno
.IP
also PYTHONWARNINGS=arg
.PP
\fB\-x\fR     : skip first line of source, allowing use of non\-Unix forms of #!cmd
\fB\-X\fR opt : set implementation\-specific option
\fB\-\-check\-hash\-based\-pycs\fR always|default|never:
.IP
control how Python invalidates hash\-based .pyc files
.PP
\fB\-\-help\-env\fR      : print help about Python environment variables and exit
\fB\-\-help\-xoptions\fR : print help about implementation\-specific \fB\-X\fR options and exit
\fB\-\-help\-all\fR      : print complete help information and exit
Arguments:
file   : program read from script file
\-      : program read from stdin (default; interactive mode if a tty)
arg ...: arguments passed to program in sys.argv[1:]
.SH "SEE ALSO"
.br 
fail2ban-client(1)
